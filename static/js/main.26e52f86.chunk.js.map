{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","name","id","uuidv4","App","useState","isReversed","setReversed","sortBy","setSortBy","isVisible","setVisible","copyGoods","preperedCreater","sort","firstGood","secondGood","localeCompare","length","reverse","getVisibilityGoods","type","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"yOASMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CACbC,KAAMD,EACNE,GAAIC,kBAGOC,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAkBC,EAAlB,KA4CA,OAASD,EAUL,qCACE,+CACA,6BAlDqB,WACzB,IAAME,EAAS,YAAOd,GAEhBe,EAAkBD,EAAUE,MAAK,SAACC,EAAWC,GACjD,OAAQR,GACN,IAAK,OACH,OAAOO,EAAUP,GAAQS,cAAcD,EAAWR,IACpD,IAAK,SACH,OAAOO,EAAUd,KAAKiB,OAASF,EAAWf,KAAKiB,OACjD,QACE,OAAO,MAQb,OAJIZ,GACFM,EAAUO,UAGLN,EAiCAO,GACErB,KAAI,SAAAC,GACH,OACE,6BACGA,EAAKC,MADCD,EAAKE,SAOtB,wBACEmB,KAAK,SACLC,QA1Ca,WACnBf,GAAY,SAAAgB,GAAO,OAAKA,MAuCpB,qBAOA,wBACED,QA5CW,WACjBb,EAAU,SA4CJY,KAAK,SAFP,yBAOA,wBACEC,QA/Ca,WACnBb,EAAU,WA+CJY,KAAK,SAFP,4BAOA,wBACEC,QAlDW,WACjBb,EAAU,QACVF,GAAY,IAiDNc,KAAK,SAFP,sBA1CF,wBACEA,KAAK,SACLC,QA9CgB,WACpBX,GAAW,IA2CT,qBCvENa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.26e52f86.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface Good {\n  name: string,\n  id: string,\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({\n  name: good,\n  id: uuidv4(),\n}));\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('none');\n  const [isVisible, setVisible] = useState(false);\n\n  const visibilityApp = () => {\n    setVisible(true);\n  };\n\n  const getVisibilityGoods = () => {\n    const copyGoods = [...goodsFromServer];\n\n    const preperedCreater = copyGoods.sort((firstGood, secondGood) => {\n      switch (sortBy) {\n        case 'name':\n          return firstGood[sortBy].localeCompare(secondGood[sortBy]);\n        case 'length':\n          return firstGood.name.length - secondGood.name.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoods.reverse();\n    }\n\n    return preperedCreater;\n  };\n\n  const reverseGoods = () => {\n    setReversed(current => !current);\n  };\n\n  const sortByName = () => {\n    setSortBy('name');\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n  };\n\n  const resetGoods = () => {\n    setSortBy('none');\n    setReversed(false);\n  };\n\n  return (!isVisible\n    ? (\n      <button\n        type=\"button\"\n        onClick={visibilityApp}\n      >\n        Select\n      </button>\n    )\n    : (\n      <>\n        <h1>List of Goods</h1>\n        <ul>\n          {getVisibilityGoods()\n            .map(good => {\n              return (\n                <li key={good.id}>\n                  {good.name}\n                </li>\n              );\n            })}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={sortByName}\n          type=\"button\"\n        >\n          Sort by ABC\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n        >\n          Sort by Length\n        </button>\n\n        <button\n          onClick={resetGoods}\n          type=\"button\"\n        >\n          Reset\n        </button>\n      </>\n    )\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}