{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","map","good","name","id","uuidv4","App","useState","isReversed","setReversed","none","sortBy","setSortBy","isVisible","setVisible","copyGoods","preperedCreater","sort","firstGood","secondGood","localeCompare","length","reverse","getVisibilityGoods","type","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KAyBKA,E,4DAhBCC,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CACbC,KAAMD,EACNE,GAAIC,mB,SAGDN,O,eAAAA,I,eAAAA,I,oBAAAA,M,KAME,IAAMO,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASR,EAAOW,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAkBC,EAAlB,KAoCA,OAASD,EAUL,qCACE,+CACA,6BA1CqB,WACzB,IAAME,EAAS,YAAOf,GAEhBgB,EAAkBD,EAAUE,MAAK,SAACC,EAAWC,GACjD,OAAQR,GACN,KAAKZ,EAAOI,KACV,OAAOe,EAAUf,KAAKiB,cAAcD,EAAWhB,MACjD,KAAKJ,EAAOsB,OACV,OAAOH,EAAUf,KAAKkB,OAASF,EAAWhB,KAAKkB,OACjD,QACE,OAAO,MAQb,OAJIb,GACFO,EAAUO,UAGLN,EAyBAO,GACEtB,KAAI,SAAAC,GAAI,OACP,6BACGA,EAAKC,MADCD,EAAKE,SAMpB,wBACEoB,KAAK,SACLC,QAhCa,WACnBhB,GAAY,SAAAiB,GAAO,OAAKA,MA6BpB,qBAOA,wBACED,QAAS,kBAAMb,EAAUb,EAAOI,OAChCqB,KAAK,SAFP,yBAOA,wBACEC,QAAS,kBAAMb,EAAUb,EAAOsB,SAChCG,KAAK,SAFP,4BAOA,wBACEC,QAhDa,WACnBb,EAAUb,EAAOW,MACjBD,GAAY,IA+CNe,KAAK,SAFP,sBAxCF,wBACEA,KAAK,SACLC,QAtCY,WAChBX,GAAW,IAmCT,oBCrENa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8b708a46.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface Good {\n  name: string,\n  id: string,\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({\n  name: good,\n  id: uuidv4(),\n}));\n\nenum SortBy {\n  none,\n  name,\n  length,\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortBy, setSortBy] = useState(SortBy.none);\n  const [isVisible, setVisible] = useState(false);\n\n  const showGoods = () => {\n    setVisible(true);\n  };\n\n  const getVisibilityGoods = () => {\n    const copyGoods = [...goodsFromServer];\n\n    const preperedCreater = copyGoods.sort((firstGood, secondGood) => {\n      switch (sortBy) {\n        case SortBy.name:\n          return firstGood.name.localeCompare(secondGood.name);\n        case SortBy.length:\n          return firstGood.name.length - secondGood.name.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoods.reverse();\n    }\n\n    return preperedCreater;\n  };\n\n  const reverseGoods = () => {\n    setReversed(current => !current);\n  };\n\n  const resetFilters = () => {\n    setSortBy(SortBy.none);\n    setReversed(false);\n  };\n\n  return (!isVisible\n    ? (\n      <button\n        type=\"button\"\n        onClick={showGoods}\n      >\n        Start\n      </button>\n    )\n    : (\n      <>\n        <h1>List of Goods</h1>\n        <ul>\n          {getVisibilityGoods()\n            .map(good => (\n              <li key={good.id}>\n                {good.name}\n              </li>\n            ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={() => setSortBy(SortBy.name)}\n          type=\"button\"\n        >\n          Sort by ABC\n        </button>\n\n        <button\n          onClick={() => setSortBy(SortBy.length)}\n          type=\"button\"\n        >\n          Sort by Length\n        </button>\n\n        <button\n          onClick={resetFilters}\n          type=\"button\"\n        >\n          Reset\n        </button>\n      </>\n    )\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}